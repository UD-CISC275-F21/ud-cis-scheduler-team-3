{"version":3,"sources":["Components/Hide.tsx","Components/TabTitle.tsx","Components/Tab.tsx","Components/EditCourse.tsx","Components/ControlPanel.tsx","Components/SemesterTable.tsx","Components/PopUpInstructions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Checkbox","React","useState","checkedOne","setCheckedOne","checkedTwo","setCheckedTwo","checkedThree","setCheckedThree","checkedFour","setCheckedFour","checkedFive","setCheckedFive","checkedSix","setCheckedSix","checkedSeven","setCheckedSeven","checkedEight","setCheckedEight","TypeCheckBox","label","value","onChange","type","checked","TabTitle","title","setSelectedTab","index","selectedTab","onClick","useCallback","className","Tabs","children","map","item","props","EditCourse","visible","setVisible","setTitle","description","setDescription","hideModal","Modal","show","onHide","Header","Title","Body","Form","Group","id","Label","Control","as","rows","ev","target","Footer","Button","variant","console","log","ControlPanel","showEditModal","ToggleButton","SemesterTable","currentSemester","courses","course","code","credits","PopUp","handleClose","content","App","COURSES","semester","setSemester","semesterList","addSemester","settingSemester","isOpen","setIsOpen","Error","Tab","href","editCourse","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a981b3c0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Checkbox(): JSX.Element {\n    const [checkedOne, setCheckedOne] = React.useState(false);\n    const [checkedTwo, setCheckedTwo] = React.useState(false);\n    const [checkedThree, setCheckedThree] = React.useState(false);\n    const [checkedFour, setCheckedFour] = React.useState(false);\n    const [checkedFive, setCheckedFive] = React.useState(false);\n    const [checkedSix, setCheckedSix] = React.useState(false);\n    const [checkedSeven, setCheckedSeven] = React.useState(false);\n    const [checkedEight, setCheckedEight] = React.useState(false);\n\n    const handleChangeOne = () => {\n        setCheckedOne(!checkedOne);\n    };\n    const handleChangeTwo = () => {\n        setCheckedTwo(!checkedTwo);\n    };\n    const handleChangeThree = () => {\n        setCheckedThree(!checkedThree);\n    };\n    const handleChangeFour = () => {\n        setCheckedFour(!checkedFour);\n    };\n    const handleChangeFive = () => {\n        setCheckedFive(!checkedFive);\n    };\n    const handleChangeSix = () => {\n        setCheckedSix(!checkedSix);\n    };\n    const handleChangeSeven = () => {\n        setCheckedSeven(!checkedSeven);\n    };\n    const handleChangeEight = () => {\n        setCheckedEight(!checkedEight);\n    };\n\n    return (\n        <div>\n            <TypeCheckBox label=\"F (Winter)\" value={checkedOne} onChange={handleChangeOne} />\n            <TypeCheckBox label=\"F (Summer)\" value={checkedTwo} onChange={handleChangeTwo} />\n            <TypeCheckBox label=\"Sp (Winter)\" value={checkedThree} onChange={handleChangeThree} />\n            <TypeCheckBox label=\"Sp (Summer)\" value={checkedFour} onChange={handleChangeFour} />\n            <TypeCheckBox label=\"J (Winter)\" value={checkedFive} onChange={handleChangeFive} />\n            <TypeCheckBox label=\"J (Summer)\" value={checkedSix} onChange={handleChangeSix} />\n            <TypeCheckBox label=\"Se (Winter)\" value={checkedSeven} onChange={handleChangeSeven} />\n            <TypeCheckBox label=\"Se (Summer)\" value={checkedEight} onChange={handleChangeEight} />\n        </div>\n    );\n}\n\n/** \n   * Setter: (b:boolean) => void\n   * Getter: () => boolean\n   * () => void is equal to VoidFunction */\n\nexport function TypeCheckBox({ label, value, onChange }: {label: string, value: boolean, onChange: VoidFunction}): JSX.Element {\n    return (\n        <label>\n            <input type=\"checkbox\" checked={value} onChange={onChange} />\n            {label}\n        </label>\n    );\n}\n\n\n\n ","import React, { useCallback } from \"react\";\nimport \"../css/Tabs.css\";\n\n\ntype Props = {\n  title: string\n  index: number\n  setSelectedTab: (index: number) => void\n  selectedTab: number\n}\n\nconst TabTitle: React.FC<Props> = ({ title, setSelectedTab, index, selectedTab }) => {\n\n    const onClick = useCallback(() => {\n        setSelectedTab(index);\n    }, [setSelectedTab, index]);\n\n    return (\n        <div className = \"TabsCSS\">\n            <li className={`li ${selectedTab === index ? \"active\" : \"\"}`}>\n                <button onClick={onClick}>{title}</button>\n            </li>\n        </div>\n    );\n};\nexport default TabTitle;\n\n","import React, {ReactElement, useState} from \"react\";\nimport TabTitle from \"./TabTitle\";\nimport \"../css/Tabs.css\";\n\n\ntype Props = {\n  children: ReactElement[]\n}\n\nconst Tabs: React.FC<Props> = ({ children }) => {\n    const [selectedTab, setSelectedTab ] = useState(0);\n\n    return (\n        <div className=\"TabsCSS\">\n            <ul className=\"ul\">\n                {children.map((item, index) => \n                    <TabTitle\n                        key={index}\n                        title={item.props.title}\n                        index={index}\n                        setSelectedTab={setSelectedTab}\n                        selectedTab={selectedTab}\n                    />\n                )}\n            </ul>\n            {children[selectedTab]}\n        </div>\n    );\n};\n\nexport default Tabs;","import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Course as CourseIF } from \"./SemesterTable\";\n\n// https://github.com/UD-CISC275-F21/ta-trainer/blob/main/src/components/AddCardModal.tsx\nexport function EditCourse({visible, setVisible}: // , editCourse, semester, setSemester\n    {visible: boolean, setVisible: (b: boolean)=>void, editCourse: (c: CourseIF)=>void, semester: CourseIF[], setSemester: (s: CourseIF[])=>void}): JSX.Element {\n    const [title, setTitle] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n    const hideModal = () => setVisible(false);\n\n    function saveEdit(): void {\n        console.log(\"in saveEdit()\");\n        //editCourse();\n        hideModal();\n    }\n        \n    return (\n        <Modal show={ visible } onHide={ hideModal }>\n            <Modal.Header>\n                <Modal.Title>Edit Course</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group className='mb-3' id='editCourse.courseTitle'>\n                        <Form.Label>Course Title</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} value={title} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setTitle(ev.target.value)} />\n                    </Form.Group>\n                    <Form.Group className='mb-3' id='editCourse.courseDescription'>\n                        <Form.Label>Course Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={5} value={description} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDescription(ev.target.value)} />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={ hideModal }>Cancel</Button>\n                <Button variant=\"primary\" onClick={ saveEdit }>Save</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React from \"react\";\nimport { ToggleButton } from \"react-bootstrap\";\n\n// https://github.com/UD-CISC275-F21/ta-trainer/blob/main/src/components/ControlPanel.tsx\nexport function ControlPanel({showEditModal}: {showEditModal: (b:boolean)=>void}): JSX.Element {\n    \n    function editCourseModal() {\n        showEditModal(true);\n    }\n    \n    return (\n        <div>\n            <ToggleButton variant=\"secondary\" value=\"1\" onClick={ editCourseModal }>Edit</ToggleButton>\n        </div>\n    );\n}","import React from \"react\";\nimport \"../css/Semester.css\";\nimport { ControlPanel } from \"./ControlPanel\";\n\nexport interface Course {\n    code: string;\n    title: string;\n    credits: number;\n    description: string;\n}\n\nexport interface Semester {\n    courses: Course[];\n    title: string;\n}\n \nexport function SemesterTable({currentSemester, showEditModal}: {currentSemester: Semester, showEditModal: (b:boolean)=>void}): JSX.Element {\n    \n    return <table className  = \"Table-Header\">\n        <tr><th>Course</th><th>Title</th><th>Credits</th><th>Description</th><th></th></tr>\n        { currentSemester.courses.map((course: Course) => {\n            console.log(\"LOOK AT THESE:\", course.code); \n            return <tr key={course.code}>\n                <td>{course.code}</td>\n                <td>{course.title}</td>\n                <td>{course.credits}</td>\n                <td>{course.description}</td>\n                <td><ControlPanel showEditModal= { showEditModal }></ControlPanel></td>\n            </tr>;\n        })}\n    </table>;\n}","import React, { useCallback } from \"react\";\n\ntype Props = {\n    handleClose: () => void;\n    content: string ;\n}\n\nconst PopUp: React.FC<Props> = ({handleClose, content}) => {\n\n    const onClick = useCallback(()=>{\n        handleClose();\n    },\n    [handleClose, content]);\n\n    return (\n        <div>\n            <span className = \"popup\"> {onClick}{handleClose}\n            [x]\n            </span>\n            {content}\n        </div>\n    );\n};\n\nexport default PopUp;\n    ","import \"./css/App.css\";\nimport React, {useState} from \"react\";\nimport { Checkbox } from \"./Components/Hide\";\nimport { Course as CourseIF } from \"./Components/SemesterTable\";\nimport Tab from \"./Components/Tab\";\nimport { EditCourse } from \"./Components/EditCourse\";\nimport COURSES from \"./Assets/Courses.json\";\nimport { Semester, SemesterTable } from \"./Components/SemesterTable\";\nimport PopUp from \"./Components/PopUpInstructions\";\n\nfunction App(): JSX.Element { // jsx.element = very important return type, function has to return jsx.element\n    const [semester, setSemester] = useState<CourseIF[]>(COURSES);\n    const [visible, setVisible] = useState<boolean>(false);\n    const semesterList: Semester[] = [{\n        courses: [COURSES[0],COURSES[1],COURSES[2],COURSES[3],COURSES[4]],\n        title: \"Freshman Fall Semester\"\n    },\n    {\n        courses: [],\n        title: \"Freshman Winter Semseter\"\n    },\n    {    \n        courses: [COURSES[5],COURSES[6],COURSES[7],COURSES[8],COURSES[9]],\n        title: \"Freshman Spring Semester\"\n    },\n    {\n        courses: [],\n        title: \"Freshman Summer Semseter\"\n    },\n    {\n        courses: [COURSES[10],COURSES[11],COURSES[12],COURSES[13],COURSES[14]],\n        title: \"Sophmore Fall Semester\"\n    },\n    {\n        courses: [],\n        title: \"Sophmore Winter Semseter\"\n    },\n    {\n        courses: [COURSES[15],COURSES[16],COURSES[17],COURSES[18],COURSES[19]],\n        title: \"Sophmore Spring Semester\"\n    },\n    {\n        courses: [],\n        title: \"Sophmore Summer Semseter\"\n    },\n    {\n        courses: [COURSES[20],COURSES[21],COURSES[22],COURSES[23],COURSES[24]],\n        title: \"Junior Fall Semester\"\n    },\n    {\n        courses: [],\n        title: \"Junior Winter Semseter\"\n    },\n    {\n        courses: [COURSES[25],COURSES[26],COURSES[27],COURSES[28],COURSES[29]],\n        title: \"Junior Spring Semester\"\n    },\n    {\n        courses: [],\n        title: \"Junior Summer Semseter\"\n    },\n    {\n        courses: [COURSES[30],COURSES[31],COURSES[32],COURSES[33],COURSES[34]],\n        title: \"Senior Fall Semester\"\n    },\n    {\n        courses: [],\n        title: \"Senior Winter Semseter\"\n    },\n    {\n        courses: [COURSES[35],COURSES[36],COURSES[37],COURSES[38],COURSES[39]],\n        title: \"Senior Spring Semester\"\n    },\n    {\n        courses: [],\n        title: \"Senior Summer Semseter\"\n    },\n    ];\n\n    const [addSemester, settingSemester] = useState<Semester>(semesterList[0]);\n    \n    function editCourse(c: CourseIF): void {\n        setSemester([...semester, c]); // fix this line later\n    }\n\n    const [isOpen, setIsOpen] = useState(false);\n    const togglePopUp = () => {\n        setIsOpen(!isOpen);\n    };\n    \n    return (\n        <div>\n            <input type  = \"button\"\n                value = \"Click to View Instructions\"\n                onClick={togglePopUp}/> \n            <p> Step by Step Instructions To Navigate Our Site </p>\n            {isOpen && <PopUp content={\"hello\"} handleClose={function (): void {\n                throw new Error(\"Function not implemented.\");\n            } }/>}\n            <Tab>\n                <span title=\"Welcome And Navigating Our Site\">\n                    <body>\n                        <header>\n                            <p>Welcome to Team 3s UD CIS Scheduler</p>\n                            <p>Authors: Ren Ross, Abel Juarez, and Ahilyn Dipre</p>\n                            <p>Our goal is to help CISC students plan out their semesters,\n                            by providing templates of potential Fall/Spring semesters and even\n                            Winter and Summer.</p>\n                            <p>This site will serve as a way for students\n                            to keep track of the classes they have taken and which ones\n                            they need to take next.\n                            </p>\n                            <p>Students will get the option to remove a Semester if they are not pleased with their schedule</p>\n                            <p>Students will be able to edit in classes in case our default schedules dont match theirs</p>\n                            <p>Recommended 4 Year Path To Graduate on Time: <a href=\"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf\">Suggested Plan</a></p>\n        \n                            <h1>Getting Started</h1>\n                            <ul>\n                                <li>Click Course Selector</li>\n                                <li>Choose designated semester which you want to plan</li>\n                                <li>Click buttons below Semester Schedules to view different semesters</li>\n                                <li>Options to start planning session all over will be available</li>\n                                <li>To be continued</li>\n                            </ul>\n                        </header>\n                    </body>\n                </span>\n                <span title=\"Course Selector\">\n                    <p>The table below is a structured set of data made up of courses that \n                        most Computer Science B.S. majors have to take. This table allows \n                        you to quickly and easily look through all the semesters (Freshman \n                        to Senior). These semesters default to courses that are recommended \n                        by the <a href=\"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf\">4 Year Path</a>  \n                        to graduate on time (by the University of Delaware). However, the \n                        tables can be manipulated in a way that can fit anyone’s academic needs.</p>\n                    \n                    <SemesterTable currentSemester={addSemester} showEditModal={ setVisible }></SemesterTable>\n                    <button onClick={() => settingSemester(semesterList[0])}>F (Fall)</button>\n                    <button onClick={() => settingSemester(semesterList[1])}>F (Winter)</button>\n                    <button onClick={() => settingSemester(semesterList[2])}>F (Spring)</button>\n                    <button onClick={() => settingSemester(semesterList[3])}>F (Summer)</button>\n                    <button onClick={() => settingSemester(semesterList[4])}>Sp (Fall)</button>\n                    <button onClick={() => settingSemester(semesterList[5])}>Sp (Winter)</button>\n                    <button onClick={() => settingSemester(semesterList[6])}>Sp (Spring)</button>\n                    <button onClick={() => settingSemester(semesterList[7])}>Sp (Summer)</button>\n                    <button onClick={() => settingSemester(semesterList[8])}>J (Fall)</button>\n                    <button onClick={() => settingSemester(semesterList[9])}>J (Winter)</button>\n                    <button onClick={() => settingSemester(semesterList[10])}>J (Spring)</button>\n                    <button onClick={() => settingSemester(semesterList[11])}>J (Summer)</button>\n                    <button onClick={() => settingSemester(semesterList[12])}>Se (Fall)</button>\n                    <button onClick={() => settingSemester(semesterList[13])}>Se (Fall)</button>\n                    <button onClick={() => settingSemester(semesterList[14])}>Se (Spring)</button>\n                    <button onClick={() => settingSemester(semesterList[15])}>Se (Summer)</button>\n                    <Checkbox></Checkbox>\n                </span>\n            </Tab>\n            <EditCourse visible={visible} setVisible={setVisible} editCourse={editCourse} semester={semester} setSemester={setSemester}></EditCourse>\n        </div>\n\n    );\n}\n\nexport default App;\n\n\n\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}