(this["webpackJsonpfinal-project-starter"]=this["webpackJsonpfinal-project-starter"]||[]).push([[0],{46:function(e,t,r){},57:function(e,t,r){},58:function(e,t,r){},60:function(e,t,r){},64:function(e,t,r){},65:function(e,t,r){"use strict";r.r(t);var n=r(0),i=r.n(n),s=r(16),o=r.n(s),c=(r(57),r(21)),a=r(3),l=(r(58),r(46),r(1)),d=function(e){var t=e.title,r=e.setSelectedTab,i=e.index,s=e.selectedTab,o=Object(n.useCallback)((function(){r(i)}),[r,i]);return Object(l.jsx)("div",{className:"TabsCSS",children:Object(l.jsx)("li",{className:"li ".concat(s===i?"active":""),children:Object(l.jsx)("button",{onClick:o,children:t})})})},u=function(e){var t=e.children,r=Object(n.useState)(0),i=Object(a.a)(r,2),s=i[0],o=i[1];return Object(l.jsxs)("div",{className:"TabsCSS",children:[Object(l.jsx)("ul",{className:"ul",children:t.map((function(e,t){return Object(l.jsx)(d,{title:e.props.title,index:t,setSelectedTab:o,selectedTab:s},t)}))}),t[s]]})},m=(r(60),r(2)),h=r(48),j=r(73),p=r(72);r(61);function b(e){var t=e.course,r=e.newCode,n=e.setCode;return Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",id:"editCourse.courseTitle",children:[Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:t.code,rows:1,value:r,onChange:function(e){return n(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's code here."})]})})}function g(e){var t=e.course,r=e.newTitle,n=e.setTitle;return Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",id:"editCourse.courseTitle",children:[Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:t.title,rows:3,value:r,onChange:function(e){return n(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's title here."})]})})}function S(e){var t=e.course,r=e.newCredits,n=e.setCredits;return Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",id:"editCourse.courseTitle",children:[Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:t.credits,rows:1,value:r,onChange:function(e){return n(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's credits here."})]})})}function C(e){var t=e.course,r=e.newDescription,n=e.setDescription;return Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",id:"editCourse.courseDescription",children:[Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:t.description,rows:5,value:r,onChange:function(e){return n(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's description here."})]})})}function f(e){var t=e.showAddModal,r=e.setShowAddModal,i=e.addCourse,s=Object(n.useState)(""),o=Object(a.a)(s,2),c=o[0],d=o[1],u=Object(n.useState)(""),m=Object(a.a)(u,2),b=m[0],g=m[1],S=Object(n.useState)(""),C=Object(a.a)(S,2),f=C[0],O=C[1],x=Object(n.useState)(""),v=Object(a.a)(x,2),y=v[0],T=v[1],E=function(){return r(!1)};return Object(l.jsxs)(p.a,{show:t,onHide:E,children:[Object(l.jsx)(p.a.Header,{closeButton:!0,children:Object(l.jsx)(p.a.Title,{children:"Add New Course"})}),Object(l.jsx)(p.a.Body,{children:Object(l.jsxs)(j.a,{children:[Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"addCourseForm.promptTextArea",children:[Object(l.jsx)(j.a.Label,{children:"Course Code"}),Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:"CISC 275",rows:1,value:c,onChange:function(e){return d(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's code here."})]}),Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"addCourseForm.promptTextArea",children:[Object(l.jsx)(j.a.Label,{children:"Course Title"}),Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:"Introduction to Software Enginerring",rows:3,value:b,onChange:function(e){return g(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's title here."})]}),Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"addCourseForm.promptTextArea",children:[Object(l.jsx)(j.a.Label,{children:"Course Credits"}),Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:"3",rows:1,value:f,onChange:function(e){return O(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's credits here."})]}),Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"addCourseForm.promptTextArea",children:[Object(l.jsx)(j.a.Label,{children:"Course Description"}),Object(l.jsx)(j.a.Control,{as:"textarea",placeholder:"Object oriented software design and development through use of an object oriented programming language.",rows:5,value:y,onChange:function(e){return T(e.target.value)}}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please enter the course's description here."})]})]})}),Object(l.jsxs)(p.a.Footer,{children:[Object(l.jsx)(h.a,{variant:"outline-danger",onClick:function(){return r(!1)},children:"Cancel"}),Object(l.jsx)(h.a,{variant:"info",onClick:function(){i({code:c,title:b,credits:f,description:y}),E()},children:"Add"})]})]})}function O(e){var t=e.showRemoveModal,r=e.setShowRemoveModal,i=e.removeCourse,s=e.currentSemester,o=Object(n.useState)(""),c=Object(a.a)(o,2),d=c[0],u=c[1],m=function(){return r(!1)};return Object(l.jsxs)(p.a,{show:t,onHide:m,children:[Object(l.jsx)(p.a.Header,{closeButton:!0,children:Object(l.jsx)(p.a.Title,{children:"Remove Course"})}),Object(l.jsx)(p.a.Body,{children:Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"addCourseForm.promptTextArea",children:[Object(l.jsx)(j.a.Control,{placeholder:"Select a course to remove.",readOnly:!0}),Object(l.jsxs)(j.a.Select,{value:d,onChange:function(e){return u(e.target.value)},children:[s.courses.map((function(e){return Object(l.jsx)("option",{children:e.code},e.code)})),";"]}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Select the course you would like removed from this drop-down menu."})]})})}),Object(l.jsxs)(p.a.Footer,{children:[Object(l.jsx)(h.a,{variant:"outline-danger",onClick:function(){return r(!1)},children:"Cancel"}),Object(l.jsx)(h.a,{variant:"warning",onClick:function(){i(d),m()},children:"Remove"})]})]})}function x(e){var t=e.addSemester,r=Object(n.useState)(!1),i=Object(a.a)(r,2),s=i[0],o=i[1],c=function(){return o(!1)},d=Object(n.useState)(""),u=Object(a.a)(d,2),m=u[0],b=u[1];return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(h.a,{variant:"outline-dark",className:"m-3",onClick:function(){return o(!0)},children:"+"}),Object(l.jsxs)(p.a,{show:s,onHide:c,children:[Object(l.jsx)(p.a.Header,{closeButton:!0,children:Object(l.jsx)(p.a.Title,{children:"Add a Semester"})}),Object(l.jsx)(p.a.Body,{children:Object(l.jsx)(j.a,{children:Object(l.jsxs)(j.a.Group,{className:"mb-3",controlId:"formBasicEmail",children:[Object(l.jsx)(j.a.Label,{children:"Semester"}),Object(l.jsxs)(j.a.Control,{as:"select",value:m,onChange:function(e){b(e.target.value)},children:[Object(l.jsx)("option",{value:"",children:"Select A Semester"}),Object(l.jsx)("option",{value:"Freshman Winter Semester",children:"Freshman Winter Semester"}),Object(l.jsx)("option",{value:"Freshman Summer Semester",children:"Freshman Summer Semester"}),Object(l.jsx)("option",{value:"Sophmore Winter Semester",children:"Sophmore Winter Semester"}),Object(l.jsx)("option",{value:"Sophmore Summer Semester",children:"Sophmore Summer Semester"}),Object(l.jsx)("option",{value:"Junior Winter Semester",children:"Junior Winter Semester"}),Object(l.jsx)("option",{value:"Junior Summmer Semester",children:"Junior Summer Semester"}),Object(l.jsx)("option",{value:"Senior Winter Semester",children:"Senior Winter Semester"}),Object(l.jsx)("option",{value:"Senior Summer Semester",children:"Senior Summer Semester"})]}),Object(l.jsx)(j.a.Text,{className:"text-muted",children:"Please choose a semester you would like to add here..."})]})})}),Object(l.jsxs)(p.a.Footer,{children:[Object(l.jsx)(h.a,{variant:"secondary",onClick:c,children:"Close"}),Object(l.jsx)(h.a,{variant:"primary",onClick:function(){t(m)},children:"Save Changes"})]})]})]})}function v(e){var t=e.removeSemester,r=Object(n.useState)(!1),i=Object(a.a)(r,2),s=i[0],o=i[1],c=function(){return o(!1)};return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(h.a,{variant:"outline-dark",className:"m-3",onClick:function(){return o(!0)},children:"-"}),Object(l.jsxs)(p.a,{show:s,onHide:c,children:[Object(l.jsx)(p.a.Header,{closeButton:!0,children:Object(l.jsx)(p.a.Title,{children:"Please Read Carefully"})}),Object(l.jsxs)(p.a.Body,{children:["What you are about to do is delete the semester that you are currently on. If you want to cancel your action, either click on the ",Object(l.jsx)("b",{children:"X"})," in the corner or click ",Object(l.jsx)("b",{children:"Cancel"}),". However, if you would like to continue, please click ",Object(l.jsx)("b",{children:"Delete"})," Semester"]}),Object(l.jsxs)(p.a.Footer,{children:[Object(l.jsx)(h.a,{variant:"secondary",onClick:c,children:"Cancel"}),Object(l.jsx)(h.a,{variant:"danger",onClick:t,children:"Delete Semester"})]})]})]})}var y="scheduler_currentSemester",T="scheduler_semesterList";function E(e){var t=e.setShowAddModal,r=e.setShowRemoveModal,n=e.setEditing,i=e.clearSemester,s=e.hardReset,o=e.currentSemester,c=e.setCurrentSemester,a=e.semesterList,d=e.setSemesterList;return Object(l.jsxs)("div",{children:[Object(l.jsxs)("div",{children:[Object(l.jsx)(h.a,{variant:"secondary",className:"m-3",onClick:function(){t(!0)},children:"Add Course"}),Object(l.jsx)(h.a,{variant:"secondary",className:"m-3",onClick:function(){r(!0)},children:"Remove Course"}),Object(l.jsx)(h.a,{variant:"secondary",className:"m-3",onClick:function(){n(!0)},children:"Edit Course"}),Object(l.jsx)(h.a,{variant:"secondary",className:"m-3",onClick:function(){i()},children:"Clear Courses"})]}),Object(l.jsxs)("div",{children:[Object(l.jsx)(w,{currentSemester:o,semesterList:a}),Object(l.jsx)(R,{currentSemester:o,setCurrentSemester:c,semesterList:a,setSemesterList:d}),Object(l.jsx)(h.a,{variant:"outline-danger",className:"m-3",onClick:function(){s()},children:"Reset to Default"})]})]})}function I(e){var t=e.course,r=e.setEditing,i=e.currentSemester,s=e.setCurrentSemester,o=Object(n.useState)(t.code),c=Object(a.a)(o,2),d=c[0],u=c[1],j=Object(n.useState)(t.title),p=Object(a.a)(j,2),f=p[0],O=p[1],x=Object(n.useState)(t.credits),v=Object(a.a)(x,2),y=v[0],T=v[1],E=Object(n.useState)(t.description),I=Object(a.a)(E,2),w=I[0],R=I[1];return Object(l.jsx)("div",{children:Object(l.jsxs)("table",{className:"Table-Header",children:[Object(l.jsxs)("tr",{children:[Object(l.jsx)("th",{children:"Course"}),Object(l.jsx)("th",{children:"Title"}),Object(l.jsx)("th",{children:"Credits"}),Object(l.jsx)("th",{children:"Description"}),Object(l.jsx)("th",{children:"Panel"})]}),Object(l.jsxs)("tr",{children:[Object(l.jsx)("td",{children:Object(l.jsx)(b,{course:t,newCode:d,setCode:u})}),Object(l.jsx)("td",{children:Object(l.jsx)(g,{course:t,newTitle:f,setTitle:O})}),Object(l.jsx)("td",{children:Object(l.jsx)(S,{course:t,newCredits:y,setCredits:T})}),Object(l.jsx)("td",{children:Object(l.jsx)(C,{course:t,newDescription:w,setDescription:R})}),Object(l.jsxs)("td",{children:[Object(l.jsx)(h.a,{variant:"outline-danger",onClick:function(){u(t.code),O(t.title),T(t.credits),R(t.description),r(!1)},children:"Cancel"}),Object(l.jsx)(h.a,{variant:"success",onClick:function(){s({title:i.title,courses:i.courses.map((function(e){return t.code===e.code?Object(m.a)(Object(m.a)({},e),{},{code:d,title:f,credits:y,description:w}):e}))}),r(!1)},children:"Done"})]})]})]})})}function w(e){var t=e.currentSemester,r=e.semesterList;return Object(l.jsx)(h.a,{variant:"outline-success",className:"m-3",onClick:function(){localStorage.setItem(y,JSON.stringify(t)),localStorage.setItem(T,JSON.stringify(r))},children:"Save Changes"})}function R(e){var t=e.currentSemester,r=e.setCurrentSemester,n=e.semesterList,i=e.setSemesterList;return Object(l.jsx)(h.a,{variant:"outline-warning",className:"m-3",onClick:function(){!function(){var e=localStorage.getItem(y),s=localStorage.getItem(T);if(null!==e&&null!==s){var o=JSON.parse(e),c=JSON.parse(s);r(o),i(c)}else{var a=JSON.parse(JSON.stringify(t)),l=JSON.parse(JSON.stringify(n));r(a),i(l)}}()},children:"Load Changes"})}function A(e){var t=e.editing,r=e.setEditing,n=e.currentSemester,i=e.setCurrentSemester;return t?Object(l.jsx)("div",{children:n.courses.map((function(e){return Object(l.jsx)(I,{course:e,setEditing:r,currentSemester:n,setCurrentSemester:i},e.code)}))}):Object(l.jsxs)("table",{className:"Table-Header",children:[Object(l.jsxs)("tr",{children:[Object(l.jsx)("th",{children:"Course"}),Object(l.jsx)("th",{children:"Title"}),Object(l.jsx)("th",{children:"Credits"}),Object(l.jsx)("th",{children:"Description"})]}),n.courses.map((function(e){return Object(l.jsxs)("tr",{children:[Object(l.jsx)("td",{children:e.code}),Object(l.jsx)("td",{children:e.title}),Object(l.jsx)("td",{children:e.credits}),Object(l.jsx)("td",{children:e.description})]},e.code)}))]})}r(64);var N=function(e){var t=e.handleClose,r=e.content,i=Object(n.useCallback)((function(){t()}),[t]);return Object(l.jsx)("div",{className:"PopUpBox",children:Object(l.jsxs)("div",{className:"box",children:[Object(l.jsx)("span",{className:"close",onClick:i,children:"x"}),r]})})},k=r(71),P=r(51),M=r(7),D=[{courses:[M[0],M[1],M[2],M[3],M[4]],title:"Freshman Fall Semester"},{courses:[M[5],M[6],M[7],M[8],M[9]],title:"Freshman Spring Semester"},{courses:[M[10],M[11],M[12],M[13],M[14]],title:"Sophmore Fall Semester"},{courses:[M[15],M[16],M[17],M[18],M[19]],title:"Sophmore Spring Semester"},{courses:[M[20],M[21],M[22],M[23],M[24]],title:"Junior Fall Semester"},{courses:[M[25],M[26],M[27],M[28],M[29]],title:"Junior Spring Semester"},{courses:[M[30],M[31],M[32],M[33],M[34]],title:"Senior Fall Semester"},{courses:[M[35],M[36],M[37],M[38],M[39]],title:"Senior Spring Semester"}];var H=function(){var e=Object(n.useState)(D),t=Object(a.a)(e,2),r=t[0],i=t[1],s=Object(n.useState)(r[0]),o=Object(a.a)(s,2),d=o[0],m=o[1],h=Object(n.useState)(!1),j=Object(a.a)(h,2),p=j[0],b=j[1],g=Object(n.useState)(!1),S=Object(a.a)(g,2),C=S[0],y=S[1],T=Object(n.useState)(!1),I=Object(a.a)(T,2),w=I[0],R=I[1],M=Object(n.useState)(!1),H=Object(a.a)(M,2),q=H[0],L=H[1];function F(){var e=r.filter((function(e){return e!==d}));i(e),m(e[0])}return Object(l.jsxs)("div",{children:[Object(l.jsx)("input",{type:"button",value:"Instructions",onClick:function(){L(!q)}}),Object(l.jsx)("p",{children:"Navigating Our Site"}),q&&Object(l.jsx)(N,{content:"Course Selector -> Choose Semester -> Make Necessary Semester Changes -> Add/Remove If Necessary",handleClose:function(){return L(!1)}}),Object(l.jsxs)(u,{children:[Object(l.jsx)("span",{title:"Welcome",children:Object(l.jsx)("body",{children:Object(l.jsxs)("header",{children:[Object(l.jsx)("h1",{children:"Team 3s UD Cis Scheduler"}),Object(l.jsx)("p",{children:"Authors: Ren Ross, Abel Juarez, and Ahilyn Dipre"}),Object(l.jsx)("p",{children:"Our goal is to help CISC students plan out their semesters, by providing templates of potential Fall/Spring semesters and even Winter and Summer."}),Object(l.jsx)("p",{children:"This site will serve as a way for students to keep track of the classes they have taken and which ones they need to take next."}),Object(l.jsx)("p",{children:"Students will get the option to remove a Semester if they are not pleased with their schedule"}),Object(l.jsx)("p",{children:"Students will be able to edit in classes in case our default schedules dont match theirs"}),Object(l.jsxs)("p",{children:["Recommended 4 Year Path To Graduate on Time: ",Object(l.jsx)("a",{href:"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf",children:"Suggested Plan"})]}),Object(l.jsx)("h2",{children:"Created by: Ren Ross, Abel Juarez and Ahilyn Dipre"})]})})}),Object(l.jsxs)("span",{title:"Course Selector",children:[Object(l.jsxs)("p",{children:["The table below is a structured set of data made up of courses that most Computer Science B.S. majors have to take. This table allows you to quickly and easily look through all the semesters (Freshman to Senior). These semesters default to courses that are recommended by the ",Object(l.jsx)("a",{href:"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf",children:"4 Year Path "}),"to graduate on time (by the University of Delaware). However, the tables can be manipulated in a way that can fit anyone\u2019s academic needs."]}),Object(l.jsx)(k.a,{id:"dropdown-basic-button",title:"Semesters",children:r.map((function(e){return Object(l.jsx)(P.a.Item,{onClick:function(){return m(e)},children:e.title},e.title)}))}),Object(l.jsx)(x,{addSemester:function(e){i([].concat(Object(c.a)(r),[{title:e,courses:[]}]))}}),Object(l.jsx)(v,{removeSemester:F}),Object(l.jsx)(A,{editing:p,setEditing:b,currentSemester:d,setCurrentSemester:m}),Object(l.jsx)(E,{setShowAddModal:y,setShowRemoveModal:R,setEditing:b,clearSemester:function(){m({title:d.title,courses:d.courses.filter((function(e){return!e.code}))})},removeSemester:F,hardReset:function(){i(D),m({title:D[0].title,courses:D[0].courses})},currentSemester:d,setCurrentSemester:m,semesterList:r,setSemesterList:i}),Object(l.jsx)(f,{showAddModal:C,setShowAddModal:y,addCourse:function(e){m({title:d.title,courses:[].concat(Object(c.a)(d.courses),[e])})}}),Object(l.jsx)(O,{showRemoveModal:w,setShowRemoveModal:R,removeCourse:function(e){m({title:d.title,courses:d.courses.filter((function(t){return t.code!=e}))})},currentSemester:d})]})]})]})},q=function(e){e&&e instanceof Function&&r.e(3).then(r.bind(null,74)).then((function(t){var r=t.getCLS,n=t.getFID,i=t.getFCP,s=t.getLCP,o=t.getTTFB;r(e),n(e),i(e),s(e),o(e)}))};o.a.render(Object(l.jsx)(i.a.StrictMode,{children:Object(l.jsx)(H,{})}),document.getElementById("root")),q()},7:function(e){e.exports=JSON.parse('[{"code":"CISC 108","title":"Introduction to Computer Science I","credits":"3","description":"Computing and principles of programming with an emphasis on systematic program design. Topics include functional programming, data abstraction, procedural abstraction, use of control and state, recursion, testing, and object-oriented programming concepts. Requires no prior programming experience, open to any major, but intended primarily for majors and minors in computer science or mathematics. COREQ: MATH115, MATH117, or higher math course or math placement. RESTRICTIONS: Students who received credit in CISC106 are not eligible to take this course without permission."},{"code":"EGGG 101","title":"Introduction to Engineering (FYE)","credits":"2","description":"Introduction to profession, including disciplines of chemical, civil, computer, electrical, environmental, and mechanical engineering. Prepares students for success through integration of: technical problem solving and engineering design, ethical decision-making, teamwork, and communicating to diverse audiences."},{"code":"MATH 241","title":"Analytic Geometry & Calculus A","credits":"4","description":"Functions, limits, continuity, derivatives. Polynomial, rational, exponential, hyperbolic, logarithmic, trigonometric and inverse trigonometric functions. Definite and indefinite integrals and the Fundamental Theorem of Calculus. Simple differential equations (separable ODE, linear ODE). ODE models leading to exponential growth and decay. PREREQ: MATH117 or acceptable score on the Math Placement Exam in accordance with current standards determined by the Department of Mathematical Sciences. See https://www.mathsci.udel.edu/courses-placement/ud-math-placement for more information. RESTRICTIONS: Students who received credit in MATH242 or MATH243 are not eligible to take this course without permission."},{"code":"ENGL 110","title":"Seminar in Composition","credits":"3","description":"Introduction to the process of academic writing that centers on the composition of analytical, research-based essays. RESTRICTIONS: Required of all students. Should be taken first year on campus."},{"code":"EDIT1","title":"Breath Requirement Elective 1","credits":"3","description":"Required of all students."},{"code":"CISC 181","title":"Introdction to Computer Science II","credits":"3","description":"Principles of computer science illustrated and applied through programming in an object oriented language. Programming projects illustrate computational problems, styles and issues that arise in computer systems development and in all application areas of computation. PREREQ: Grade of C- or better in CISC108 or CISC106. COREQ: MATH221, MATH241, or a higher level math course or math placement."},{"code":"CISC 210","title":"Introduction to Systems Programming","credits":"3","description":"Principles of computer systems programming for software and hardware platforms to achieve efficient resource usage. Topics include the C programming language, memory management, and awareness of system constraints and interfacing. Projects include programming embedded systems and interactive objects. PREREQ: A grade of C- or better in CISC106 or CISC108. COREQ: MATH221 or MATH241 or a higher level math course or math placement."},{"code":"MATH 242","title":"Analytic Geometry & Calculus B","credits":"4","description":"Brief review of MATH241; evaluation of limits by L Hospital s rule; applications of integration; integration techniques; parametric curves; polar coordinates; infinite sequences and series. Includes use of computers to perform symbolic, numerical and graphical analysis. PREREQ: MATH232 or MATH241. RESTRICTIONS: Students who received credit in MATH243 are not eligible to take this course without permission."},{"code":"EDIT2","title":"Laboratory Science I","credits":"4","description":"Required of all students. Any science with a lab"},{"code":"EDIT3","title":"Breath Requirement Elective 2","credits":"3","description":"Required of all students."},{"code":"CISC 220","title":"Data Structures","credits":"3","description":"Review of data type abstraction, recursion, arrays, stacks, queues, multiple stacks and linked lists. Emphasis on dynamic storage management, garbage collection, trees, graphs, tables, sorting and searching. PREREQ: A minimum grade of C- in CISC210. COREQ: MATH210 or MATH241."},{"code":"CISC 260","title":"Machine Org. & Assembly Language","credits":"3","description":"Introduction to the basics of machine organization. Programming tools and techniques at the machine and assembly levels. Assembly language programming and computer arithmetic techniques. PREREQ: A minimum grade of C- in CISC210."},{"code":"MATH 210","title":"Discrete Mathematics I","credits":"3","description":"Elements of sets and logic. Relations, functions. Integers. Induction and recursion. Principles and techniques of counting. Graphs. Paths and circuits COREQ: MATH241, MATH242 or MATH232"},{"code":"EDIT4","title":"Laboratory Science 2","credits":"4","description":"Required of all students. Any science with a lab"},{"code":"EDIT5","title":"Breath Requirement Elective 3","credits":"3","description":"Required of all students."},{"code":"CISC 355","title":"Computers, Ethics & Society","credits":"3","description":"Explains relationships among information technology, society and ethics by examining issues raised by increasingly widespread use of computers. Topics include ethics for computer professionals, computer impact on factory work, office work, personal privacy and social power distribution."},{"code":"CISC 275","title":"Introduction to Software Engineering","credits":"3","description":"Object oriented software design and development through use of an object oriented programming language. Topics include team programming, design patterns, graphical user interfaces, software engineering tools (e.g., integrated development environments, version control, build management, bug tracking, automated testing). PREREQ: Minimum grade of C- in CISC181 and CISC220."},{"code":"MATH 205 (or) MATH 350","title":"Statistical Methods (or) Probability Theory and Simulation Methods","credits":"3","description":"Descriptive statistics, graphical displays, sampling, variation, normal distribution, estimation, hypothesis testing, one-way analysis of variance, simple linear regression and goodness of fit. Laboratory covers use of statistical packages on mainframe and microcomputers. PREREQ: MATH210 or MATH230. RESTRICTIONS: Students who received credit in STAT200 or APEC408 are not eligible to take this course without permission. (or) Introduces the basic theory of discrete and continuous aspects of probability theory. Topics include bivariate distributions, sums of independent random variables, moment generating functions, laws of large numbers and central limit theorem. COREQ: MATH243. RESTRICTIONS: Requires basic knowledge of the counting principles in permutation and combination."},{"code":"EDIT6","title":"Laboratory Science 3","credits":"4","description":"Required of all students. Any science with a lab"},{"code":"EDIT7","title":"Breath Requirement Elective 4","credits":"3","description":"Required of all students."},{"code":"CISC 320","title":"Introduction to Algorithms","credits":"3","description":"Design and analysis of algorithms: worst/average case analysis, proofs for correctness and performance of algorithms. Algorithmic strategies (divide and conquer, greedy methods, dynamic programming, etc.). Algorithms for searching, forming and traversal of strings, trees and graphs. Categorization of computational problems: classes P and NP. NP completeness. PREREQ: MATH210 and a minimum grade of C- in CISC220."},{"code":"CISC 361","title":"Operating Systems","credits":"3","description":"Principles and techniques employed in the development of operating systems and their control programs. Includes management of memory, processors, I/O devices. PREREQ: A minimum grade of C- in both CISC220 and CISC260. CPEG222 may be substituted for CISC260 RESTRICTIONS: CISC360 recommended as a prerequisite."},{"code":"CISC 304 (or) MATH 349","title":"Logic and Programming (or) Elementary Linear Algebra","credits":"3","description":"Propositional and predicate logic for general reasoning and advanced applications in knowledge representation in artificial intelligence and database, program correctness and programming semantics. Models, resolution, logic programming, and natural deduction. PREREQ: CISC220, MATH210 (with minimum C- grade in both). (or) Systems of linear equations, linear combinations of vectors, and matrix algebra. Determinants, eigenvalues and eigenvectors, similarity and diagonalization of square matrices. Vector spaces, linear dependence and independence, basis and dimension, linear transformations. Inner product spaces, orthogonality, orthogonal projections, fundamental subspaces. A software package may be used for the analysis and solution of linear algebra problems. PREREQ: MATH230 or MATH242. RESTRICTIONS: Students who received credit in MATH342 or MATH351 are not eligible to take this course without permission."},{"code":"EDIT8","title":"Concentration Elective 1","credits":"4","description":"Required of all students. Concentration courses (Ex. Software Engineering, Cyber Security)"},{"code":"EDIT9","title":"General Elective 1","credits":"3","description":"Required of all students."},{"code":"CISC 372","title":"Parallel Computing","credits":"3","description":"Introduction to parallel computing concepts, methodologies, and tools. Programming and algorithmic techniques for code that will run simultaneously on parallel computing architectures. Topics include: single and multi-core parallelism, shared and distributed memory architectures, concurrency, program decomposition, data distribution, communication, load balancing, scalability, locality, granularity, debugging, performance evaluation. PREREQ: C- or better in both CISC 220 and CISC 260."},{"code":"CISC 303","title":"Automata Theory","credits":"3","description":"Automata and formal language theory. Background for advanced applications in compilers, computer networks, operating systems, and natural language processing. Finite automata and regular languages. Push down automata and context free grammars. Turing machines. PREREQ: A minimum grade of C- in both MATH210 and CISC220."},{"code":"ENGL 312 (or) ENGL 410","title":"Written Communication in Business (or) Technical Writing","credits":"3","description":"Examines the role of written communication in corporate decision making. Students write memos, letters, proposals and reports that simulate on-the-job communication tasks, and are encouraged to use materials from their fields of specialization. PREREQ: ENGL110. (or) Selected problems in technical communications, the preparation of reports and technical editing. PREREQ: ENGL110."},{"code":"EDIT10","title":"Concentration Elective 2","credits":"4","description":"Required of all students. Concentration courses (Ex. Software Engineering, Cyber Security)"},{"code":"EDIT11","title":"General Elective 2","credits":"3","description":"Required of all students."},{"code":"CISC 498 (or) UNIV 401","title":"Computer Science Design Project 1 (or) Senior Thesis (DLE & Capstone)","credits":"3","description":"First semester of two-semester senior software design course.  Students work in teams to develop solutions to real-world problems for a client.  Application of a modern software engineering process; requirement solicitation, analysis, and specification; prototyping; design; incremental development; testing and verification; client interaction; and presentation. Offered in Fall only. PREREQ: CISC275 and CISC320. (or) Senior thesis for students working toward a degree with distinction. RESTRICTIONS: Total credits for UNIV401 and UNIV402 not to exceed six."},{"code":"CISC 3XX (1)","title":"Computer Science Elective 1","credits":"3","description":"Required of all students."},{"code":"EDIT12","title":"Concentration Elective 3","credits":"4","description":"Required of all students. Concentration courses (Ex. Software Engineering, Cyber Security)"},{"code":"EDIT13","title":"General Elective 3","credits":"3","description":"Required of all students."},{"code":"EDIT14","title":"General Elective 4","credits":"3","description":"Required of all students."},{"code":"CISC 499 (or) UNIV 402","title":"Computer Science Design Project 2 (or) Senior Thesis (DLE & Capstone)","credits":"3","description":"Continuation of CISC 498. PREREQ: CISC498. (or) Continuation of UNIV401. RESTRICTIONS: Total credits for UNIV401 and UNIV402 not to exceed six."},{"code":"CISC 3XX (2)","title":"Computer Science Elective 2","credits":"3","description":"Required of all students."},{"code":"EDIT15","title":"Concentration Elective 4","credits":"4","description":"Required of all students. Concentration courses (Ex. Software Engineering, Cyber Security)"},{"code":"EDIT16","title":"General Elective 5","credits":"3","description":"Required of all students."},{"code":"EDIT17","title":"General Elective 6","credits":"3","description":"Required of all students."}]')}},[[65,1,2]]]);
//# sourceMappingURL=main.677cd520.chunk.js.map