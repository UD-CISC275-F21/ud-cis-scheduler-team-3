{"version":3,"sources":["Components/Tabs/TabTitle.tsx","Components/Tabs/Tab.tsx","Components/Modals&Forms.tsx","Components/ControlPanel.tsx","Components/Semesters/SemesterTable.tsx","Components/PopUpInstructions.tsx","Components/Semesters/DefaultSemesters.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabTitle","title","setSelectedTab","index","selectedTab","onClick","useCallback","className","Tabs","children","useState","map","item","props","CodeForm","course","newCode","setCode","Form","Group","id","Control","as","placeholder","code","rows","value","onChange","ev","target","Text","TitleForm","newTitle","setTitle","CreditsForm","newCredits","setCredits","credits","DescriptionForm","newDescription","setDescription","description","AddCourseModal","showAddModal","setShowAddModal","addCourse","hideAddModal","Modal","show","onHide","Header","closeButton","Title","Body","controlId","Label","Footer","Button","variant","RemoveCourseModal","showRemoveModal","setShowRemoveModal","removeCourse","removeCode","setRemoveCode","hideRemoveModal","AddSemesterModal","addSemester","setShow","handleClose","semester","setSemester","e","RemoveSemesterModal","removeSemester","LOCAL_STORAGE","ControlPanelButtons","setEditing","clearSemester","hardReset","hardSave","hardLoad","CloseEditing","currentSemester","setCurrentSemester","courses","oldCourse","SemesterTable","editing","PopUp","content","defaultSemesters","COURSES","App","semesterList","setSemesterList","isOpen","setIsOpen","newSemesterList","filter","sem","type","Tab","href","DropdownButton","semi","Dropdown","Item","newSemester","localStorage","setItem","JSON","stringify","scheduleJSON","getItem","parsed","parse","newCourse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAyBeA,EAdmB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAEzDC,EAAUC,uBAAY,WACxBJ,EAAeC,KAChB,CAACD,EAAgBC,IAEpB,OACI,qBAAKI,UAAY,UAAjB,SACI,oBAAIA,UAAS,aAAQH,IAAgBD,EAAQ,SAAW,IAAxD,SACI,wBAAQE,QAASA,EAAjB,SAA2BJ,SCU5BO,EArBe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAuCC,mBAAS,GAAhD,mBAAON,EAAP,KAAoBF,EAApB,KAEA,OACI,sBAAKK,UAAU,UAAf,UACI,oBAAIA,UAAU,KAAd,SACKE,EAASE,KAAI,SAACC,EAAMT,GAAP,OACV,cAAC,EAAD,CAEIF,MAAOW,EAAKC,MAAMZ,MAClBE,MAAOA,EACPD,eAAgBA,EAChBE,YAAaA,GAJRD,QAQhBM,EAASL,O,6CCpBf,SAASU,EAAT,GAAuI,IAAnHC,EAAkH,EAAlHA,OAAQC,EAA0G,EAA1GA,QAASC,EAAiG,EAAjGA,QACxC,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAOa,GAAG,yBAAhC,UACI,cAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAaR,EAAOS,KAAMC,KAAM,EACxDC,MAAOV,EAASW,SAAU,SAACC,GAAD,OAAgDX,EAAQW,EAAGC,OAAOH,UAChG,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,uDAMT,SAASwB,EAAT,GAA6I,IAAxHhB,EAAuH,EAAvHA,OAAQiB,EAA+G,EAA/GA,SAAUC,EAAqG,EAArGA,SAC1C,OACI,cAACf,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAOa,GAAG,yBAAhC,UACI,cAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAaR,EAAOd,MAAOwB,KAAM,EACzDC,MAAOM,EAAUL,SAAU,SAACC,GAAD,OAAgDK,EAASL,EAAGC,OAAOH,UAClG,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,wDAMT,SAAS2B,EAAT,GAAyJ,IAAlInB,EAAiI,EAAjIA,OAAQoB,EAAyH,EAAzHA,WAAYC,EAA6G,EAA7GA,WAC9C,OACI,cAAClB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAOa,GAAG,yBAAhC,UACI,cAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAaR,EAAOsB,QAASZ,KAAM,EAC3DC,MAAOS,EAAYR,SAAU,SAACC,GAAD,OAAgDQ,EAAWR,EAAGC,OAAOH,UACtG,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,0DAMT,SAAS+B,EAAT,GAAiL,IAAtJvB,EAAqJ,EAArJA,OAAQwB,EAA6I,EAA7IA,eAAgBC,EAA6H,EAA7HA,eACtD,OACI,cAACtB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAOa,GAAG,+BAAhC,UACI,cAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAaR,EAAO0B,YAAahB,KAAM,EAC/DC,MAAOa,EAAgBZ,SAAU,SAACC,GAAD,OAAgDY,EAAeZ,EAAGC,OAAOH,UAC9G,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,8DAMT,SAASmC,EAAT,GAC6G,IADnFC,EACkF,EADlFA,aAAcC,EACoE,EADpEA,gBAAiBC,EACmD,EADnDA,UAE5D,EAAwBnC,mBAAiB,IAAzC,mBAAOc,EAAP,KAAaP,EAAb,KACA,EAA0BP,mBAAiB,IAA3C,mBAAOT,EAAP,KAAcgC,EAAd,KACA,EAA8BvB,mBAAiB,IAA/C,mBAAO2B,EAAP,KAAgBD,EAAhB,KACA,EAAsC1B,mBAAiB,IAAvD,mBAAO+B,EAAP,KAAoBD,EAApB,KACMM,EAAe,kBAAMF,GAAgB,IAS3C,OACI,eAACG,EAAA,EAAD,CAAOC,KAAML,EAAcM,OAAQH,EAAnC,UACI,cAACC,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,+BAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,eAACnC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,+BAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,0BACA,cAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAa,WAAYE,KAAM,EACvDC,MAAOF,EAAMG,SAAU,SAACC,GAAD,OAAgDX,EAAQW,EAAGC,OAAOH,UAC7F,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,qDAEJ,eAACW,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,+BAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,2BACA,cAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAa,uCAAwCE,KAAM,EACnFC,MAAOzB,EAAO0B,SAAU,SAACC,GAAD,OAAgDK,EAASL,EAAGC,OAAOH,UAC/F,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,sDAEJ,eAACW,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,+BAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,6BACA,cAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAa,IAAKE,KAAM,EAChDC,MAAOW,EAASV,SAAU,SAACC,GAAD,OAAgDQ,EAAWR,EAAGC,OAAOH,UACnG,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,wDAEJ,eAACW,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,+BAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,iCACA,cAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAa,0GAA2GE,KAAM,EACtJC,MAAOe,EAAad,SAAU,SAACC,GAAD,OAAgDY,EAAeZ,EAAGC,OAAOH,UAC3G,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,iEAIZ,eAACwC,EAAA,EAAMS,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,iBAAiBrD,QAAS,kBAAMuC,GAAgB,IAAhE,oBACA,cAACa,EAAA,EAAD,CAAQC,QAAQ,OAAOrD,QA1CnC,WACIwC,EAAU,CACNrB,OAAMvB,QAAOoC,UAASI,gBAE1BK,KAsCQ,uBAKT,SAASa,EAAT,GACsH,IADzFC,EACwF,EADxFA,gBAAiBC,EACuE,EADvEA,mBAAoBC,EACmD,EADnDA,aAErE,EAAoCpD,mBAAiB,IAArD,mBAAOqD,EAAP,KAAmBC,EAAnB,KACMC,EAAkB,kBAAMJ,GAAmB,IAOjD,OACI,eAACd,EAAA,EAAD,CAAOC,KAAMY,EAAiBX,OAAQgB,EAAtC,UACI,cAAClB,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,8BAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,cAACnC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,+BAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,gCACA,cAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,WAAWC,YAAa,WAAYE,KAAM,EACvDC,MAAOqC,EAAYpC,SAAU,SAACC,GAAD,OAAgDoC,EAAcpC,EAAGC,OAAOH,UACzG,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,yDAIZ,eAACwC,EAAA,EAAMS,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,iBAAiBrD,QAAS,kBAAMwD,GAAmB,IAAnE,oBACA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,UAAUrD,QAtBtC,WACIyD,EAAaC,GACbE,KAoBQ,0BAKT,SAASC,EAAT,GAA+F,IAAnEC,EAAkE,EAAlEA,YAC/B,EAAwBzD,oBAAS,GAAjC,mBAAOsC,EAAP,KAAaoB,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAElC,EAAgC1D,mBAAiB,IAAjD,mBAAO4D,EAAP,KAAiBC,EAAjB,KAOA,OACI,qCACI,cAACd,EAAA,EAAD,CAAQC,QAAQ,eAAerD,QAVpB,kBAAM+D,GAAQ,IAUzB,eAEA,eAACrB,EAAA,EAAD,CAAOC,KAAMA,EAAMC,OAAQoB,EAA3B,UACI,cAACtB,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,+BAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,cAACnC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYZ,UAAU,OAAO+C,UAAU,iBAAvC,UACI,cAACpC,EAAA,EAAKqC,MAAN,uBACA,eAACrC,EAAA,EAAKG,QAAN,CAAcC,GAAG,SACbI,MAAO4C,EACP3C,SACI,SAAA6C,GACID,EAAYC,EAAE3C,OAAOH,QAJjC,UAMI,wBAAQA,MAAM,GAAd,+BACA,wBAAQA,MAAM,2BAAd,sCACA,wBAAQA,MAAM,2BAAd,sCACA,wBAAQA,MAAM,2BAAd,sCACA,wBAAQA,MAAM,2BAAd,sCACA,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,0BAAd,oCACA,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,yBAAd,uCAEJ,cAACR,EAAA,EAAKY,KAAN,CAAWvB,UAAU,aAArB,2EAMZ,eAACwC,EAAA,EAAMS,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYrD,QAASgE,EAArC,mBAGA,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAUrD,QA3C1C,WACI8D,EAAYG,IA0CA,mCA6Db,SAASG,EAAT,GAA+F,IAAhEC,EAA+D,EAA/DA,eAClC,EAAwBhE,oBAAS,GAAjC,mBAAOsC,EAAP,KAAaoB,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAGlC,OACI,qCACI,cAACX,EAAA,EAAD,CAAQC,QAAQ,eAAerD,QAJpB,kBAAM+D,GAAQ,IAIzB,eAEA,eAACrB,EAAA,EAAD,CAAOC,KAAMA,EAAMC,OAAQoB,EAA3B,UACI,cAACtB,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,sCAEJ,eAACL,EAAA,EAAMM,KAAP,gJACwB,kCADxB,2BACwD,uCADxD,0DAEU,uCAFV,eAIA,eAACN,EAAA,EAAMS,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYrD,QAASgE,EAArC,oBAGA,cAACZ,EAAA,EAAD,CAAQC,QAAQ,SAASrD,QAASqE,EAAlC,sCCzQb,IAAMC,EAAgB,WAEtB,SAASC,EAAT,GAEuH,IAFzFhC,EAEwF,EAFxFA,gBAAiBiB,EAEuE,EAFvEA,mBAAoBgB,EAEmD,EAFnDA,WAAYC,EAEuC,EAFvCA,cAAeC,EAEwB,EAFxBA,UAAWC,EAEa,EAFbA,SAAUC,EAEG,EAFHA,SAItH,OAAO,gCACH,cAACxB,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACLuC,GAAgB,IAJxB,wBAOA,cAACa,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACLwD,GAAmB,IAJ3B,2BAOA,cAACJ,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACLwE,GAAW,IAJnB,yBAOA,cAACpB,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACLyE,KAJR,2BAOA,cAACrB,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACL0E,KAJR,mBAOA,cAACtB,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACL2E,KAJR,kBAOA,cAACvB,EAAA,EAAD,CACIC,QAAQ,YACRnD,UAAU,OACVF,QAAS,WACL4E,KAJR,qBAWD,SAASC,EAAT,GAC+H,IADxGnE,EACuG,EADvGA,OAAQ8D,EAC+F,EAD/FA,WAAYM,EACmF,EADnFA,gBAAiBC,EACkE,EADlEA,mBAE/D,EAA2B1E,mBAAiBK,EAAOS,MAAnD,mBAAOR,EAAP,KAAgBC,EAAhB,KACA,EAA6BP,mBAAiBK,EAAOd,OAArD,mBAAO+B,EAAP,KAAiBC,EAAjB,KACA,EAAiCvB,mBAAiBK,EAAOsB,SAAzD,mBAAOF,EAAP,KAAmBC,EAAnB,KACA,EAAyC1B,mBAAiBK,EAAO0B,aAAjE,mBAAOF,EAAP,KAAuBC,EAAvB,KAkBA,OACI,8BAAK,wBAAOjC,UAAa,eAApB,UACD,+BAAI,wCAAe,uCAAc,yCAAgB,6CAAoB,0CACrE,+BAAI,6BAAI,cAACO,EAAD,CAAUC,OAASA,EAASC,QAAUA,EAAUC,QAAUA,MAC9D,6BAAI,cAACc,EAAD,CAAWhB,OAASA,EAASiB,SAAWA,EAAWC,SAAWA,MAClE,6BAAI,cAACC,EAAD,CAAanB,OAASA,EAASoB,WAAaA,EAAaC,WAAaA,MAC1E,6BAAI,cAACE,EAAD,CAAiBvB,OAASA,EAASwB,eAAiBA,EAAiBC,eAAiBA,MAC1F,+BACI,cAACiB,EAAA,EAAD,CACIC,QAAQ,iBACRrD,QAAS,WAhBzBY,EAAQF,EAAOS,MACfS,EAASlB,EAAOd,OAChBmC,EAAWrB,EAAOsB,SAClBG,EAAezB,EAAO0B,aAeFoC,GAAW,IAJnB,oBAOA,cAACpB,EAAA,EAAD,CACIC,QAAQ,UACRrD,QAAS,WA/BzB+E,EAAmB,CAACnF,MAAOkF,EAAgBlF,MAAOoF,QAASF,EAAgBE,QAAQ1E,KAAI,SAAC2E,GACpF,OAAOvE,EAAOS,OAAS8D,EAAU9D,KAA1B,2BACC8D,GADD,IACY9D,KAAMR,EAASf,MAAO+B,EAAUK,QAASF,EAAYM,YAAaF,IAC/E+C,OA8BUT,GAAW,IAJnB,6BClGb,SAASU,EAAT,GACgI,IADxGC,EACuG,EADvGA,QAASX,EAC8F,EAD9FA,WAAYM,EACkF,EADlFA,gBAAiBC,EACiE,EADjEA,mBAGjE,OAAQI,EAaJ,8BACML,EAAgBE,QAAQ1E,KAAI,SAACI,GAC3B,OAAO,cAACmE,EAAD,CAEHnE,OAASA,EACT8D,WAAaA,EACbM,gBAAkBA,EAClBC,mBAAqBA,GAJfrE,EAAOS,WAfzB,wBAAOjB,UAAa,eAApB,UACI,+BAAI,wCAAe,uCAAc,yCAAgB,gDAC/C4E,EAAgBE,QAAQ1E,KAAI,SAACI,GAC3B,OAAO,+BACH,6BAAKA,EAAOS,OACZ,6BAAKT,EAAOd,QACZ,6BAAKc,EAAOsB,UACZ,6BAAKtB,EAAO0B,gBAJA1B,EAAOS,Y,UCexBiE,EAnBgB,SAAC,GAA4B,IAA3BpB,EAA0B,EAA1BA,YAAaqB,EAAa,EAAbA,QAEpCrF,EAAUC,uBAAY,WACxB+D,MAEJ,CAACA,IAED,OACI,qBAAK9D,UAAY,WAAjB,SACI,sBAAKA,UAAY,MAAjB,UACI,sBAAMA,UAAY,QAAQF,QAASA,EAAnC,eAGCqF,Q,uBCnBJC,EAA+B,CAAC,CACzCN,QAAS,CAACO,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAClE3F,MAAO,0BAEX,CACIoF,QAAS,CAACO,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAClE3F,MAAO,4BAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,0BAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,4BAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,wBAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,0BAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,wBAEX,CACIoF,QAAS,CAACO,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,IAAKA,EAAQ,KACtE3F,MAAO,2BCwFI4F,MA7Gf,WACI,MAAwCnF,mBAASiF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CrF,mBAAmBoF,EAAa,IAA9E,mBAAOX,EAAP,KAAwBC,EAAxB,KACA,EAA8B1E,oBAAkB,GAAhD,mBAAO8E,EAAP,KAAgBX,EAAhB,KACA,EAAwCnE,oBAAkB,GAA1D,mBAAOiC,EAAP,KAAqBC,EAArB,KACA,EAA8ClC,oBAAkB,GAAhE,mBAAOkD,EAAP,KAAwBC,EAAxB,KACA,EAA4BnD,oBAAS,GAArC,mBAAOsF,EAAP,KAAeC,EAAf,KAyBA,SAASvB,IACL,IAAMwB,EAAkBJ,EAAaK,QAAO,SAAAC,GAAG,OAAIA,IAAQjB,KAC3DY,EAAgBG,GAChBd,EAAmBc,EAAgB,IAoBvC,OACI,gCACI,uBAAOG,KAAK,SACR3E,MAAM,eACNrB,QAnDQ,WAChB4F,GAAWD,MAmDP,oDACCA,GAAU,cAAC,EAAD,CAAON,QAAS,mGAAoGrB,YAAa,kBAAM4B,GAAU,MAC5J,eAACK,EAAD,WACI,sBAAMrG,MAAM,UAAZ,SACI,+BACI,mCACI,0DACA,iFACA,kLAGA,+JAIA,8HACA,yHACA,8EAAgD,mBAAGsG,KAAK,oFAAR,+BAChD,2FAIZ,uBAAMtG,MAAM,kBAAZ,UACI,qTAIW,mBAAGsG,KAAK,oFAAR,0BAJX,qJAOA,cAACC,EAAA,EAAD,CAAgBpF,GAAG,wBAAwBnB,MAAM,YAAjD,SACK6F,EAAanF,KAAI,SAAA8F,GACd,OACI,cAACC,EAAA,EAASC,KAAV,CAAetG,QAAS,kBAAM+E,EAAmBqB,IAAjD,SAA0EA,EAAKxG,OAAlBwG,EAAKxG,YAI9E,cAACiE,EAAD,CAAkBC,YA3DlC,SAAqByC,GACjBb,EAAgB,GAAD,mBAAKD,GAAL,CAAmB,CAAC7F,MAAO2G,EAAavB,QAAS,UA2DpD,cAACZ,EAAD,CAAqBC,eAAgBA,IACrC,cAACa,EAAD,CAAeC,QAASA,EAASX,WAAYA,EAAYM,gBAAiBA,EAAiBC,mBAAoBA,IAC/G,cAACR,EAAD,CAAqBhC,gBAAkBA,EAAkBiB,mBAAqBA,EAAqBgB,WAAaA,EAAaC,cAzD7I,WACIM,EAAmB,CAACnF,MAAOkF,EAAgBlF,MAAOoF,QAASF,EAAgBE,QAAQc,QAAO,SAAAP,GAAO,OAAKA,EAAQpE,WAwD2DkD,eAAiBA,EAAiBK,UAxE/M,WACIgB,EAAgBJ,IAuEmNX,SAxFvO,WACI6B,aAAaC,QAAQnC,EAAeoC,KAAKC,UAAUlB,KAuFsMb,SAnF7P,WACI,IAAMgC,EAAeJ,aAAaK,QAAQvC,GAC1C,GAAqB,OAAjBsC,EAAuB,CACvB,IAAME,EAASJ,KAAKK,MAAMH,GAC1BlB,EAAgBoB,OACZ,CACJ,IAAMA,EAASJ,KAAKK,MAAM,MAC1BrB,EAAgBoB,OA6ER,cAACzE,EAAD,CAAgBC,aAAeA,EAAeC,gBAAkBA,EAAkBC,UAtDlG,SAAmBwE,GACfjC,EAAmB,CAACnF,MAAOkF,EAAgBlF,MAAOoF,QAAQ,GAAD,mBAAMF,EAAgBE,SAAtB,CAA+BgC,SAsD5E,cAAC1D,EAAD,CAAmBC,gBAAkBA,EAAkBC,mBAAqBA,EAAqBC,aAnDjH,SAAsBC,GAClBqB,EAAmB,CAACnF,MAAOkF,EAAgBlF,MAAOoF,QAASF,EAAgBE,QAAQc,QAAO,SAAApF,GAAM,OAAIA,EAAOS,MAAQuC,oBCjD5GuD,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.4e1c2ba1.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport \"../../css/Tabs.css\";\n\n\ntype Props = {\n  title: string\n  index: number\n  setSelectedTab: (index: number) => void\n  selectedTab: number\n}\n\nconst TabTitle: React.FC<Props> = ({ title, setSelectedTab, index, selectedTab }) => {\n\n    const onClick = useCallback(() => {\n        setSelectedTab(index);\n    }, [setSelectedTab, index]);\n\n    return (\n        <div className = \"TabsCSS\">\n            <li className={`li ${selectedTab === index ? \"active\" : \"\"}`}>\n                <button onClick={onClick}>{title}</button>\n            </li>\n        </div>\n    );\n};\nexport default TabTitle;\n\n","import React, {ReactElement, useState} from \"react\";\nimport TabTitle from \"./TabTitle\";\nimport \"../../css/Tabs.css\";\n\n\ntype Props = {\n  children: ReactElement[]\n}\n\nconst Tabs: React.FC<Props> = ({ children }) => {\n    const [selectedTab, setSelectedTab ] = useState(0);\n\n    return (\n        <div className=\"TabsCSS\">\n            <ul className=\"ul\">\n                {children.map((item, index) => \n                    <TabTitle\n                        key={index}\n                        title={item.props.title}\n                        index={index}\n                        setSelectedTab={setSelectedTab}\n                        selectedTab={selectedTab}\n                    />\n                )}\n            </ul>\n            {children[selectedTab]}\n        </div>\n    );\n};\n\nexport default Tabs;","import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Course } from \"../Interfaces/Course\";\n\nexport function CodeForm({ course, newCode, setCode }: { course: Course, newCode: string, setCode: (newCode: string) => void }): JSX.Element {\n    return (\n        <Form>\n            <Form.Group className='mb-3' id='editCourse.courseTitle'>\n                <Form.Control as=\"textarea\" placeholder={course.code} rows={1}\n                    value={newCode} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCode(ev.target.value)} />\n                <Form.Text className=\"text-muted\">Please enter the course&#39;s code here.</Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport function TitleForm({ course, newTitle, setTitle }: { course: Course, newTitle: string, setTitle: (newTitle: string) => void }): JSX.Element {\n    return (\n        <Form>\n            <Form.Group className='mb-3' id='editCourse.courseTitle'>\n                <Form.Control as=\"textarea\" placeholder={course.title} rows={3}\n                    value={newTitle} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setTitle(ev.target.value)} />\n                <Form.Text className=\"text-muted\">Please enter the course&#39;s title here.</Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport function CreditsForm({ course, newCredits, setCredits }: { course: Course, newCredits: string, setCredits: (newCredits: string) => void }): JSX.Element {\n    return (\n        <Form>\n            <Form.Group className='mb-3' id='editCourse.courseTitle'>\n                <Form.Control as=\"textarea\" placeholder={course.credits} rows={1}\n                    value={newCredits} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCredits(ev.target.value)} />\n                <Form.Text className=\"text-muted\">Please enter the course&#39;s credits here.</Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport function DescriptionForm({ course, newDescription, setDescription }: { course: Course, newDescription: string, setDescription: (newDescription: string) => void }): JSX.Element {\n    return (\n        <Form>\n            <Form.Group className='mb-3' id='editCourse.courseDescription'>\n                <Form.Control as=\"textarea\" placeholder={course.description} rows={5}\n                    value={newDescription} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDescription(ev.target.value)} />\n                <Form.Text className=\"text-muted\">Please enter the course&#39;s description here.</Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport function AddCourseModal({ showAddModal, setShowAddModal, addCourse }:\n    { showAddModal: boolean, setShowAddModal: (b: boolean) => void, addCourse: (c: Course) => void }): JSX.Element {\n    const [code, setCode] = useState<string>(\"\");\n    const [title, setTitle] = useState<string>(\"\");\n    const [credits, setCredits] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n    const hideAddModal = () => setShowAddModal(false);\n\n    function saveCourse() {\n        addCourse({\n            code, title, credits, description\n        });\n        hideAddModal();\n    }\n\n    return (\n        <Modal show={showAddModal} onHide={hideAddModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add New Course</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"addCourseForm.promptTextArea\">\n                        <Form.Label>Course Code</Form.Label>\n                        <Form.Control as=\"textarea\" placeholder={\"CISC 275\"} rows={1}\n                            value={code} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCode(ev.target.value)} />\n                        <Form.Text className=\"text-muted\">Please enter the course&#39;s code here.</Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"addCourseForm.promptTextArea\">\n                        <Form.Label>Course Title</Form.Label>\n                        <Form.Control as=\"textarea\" placeholder={\"Introduction to Software Enginerring\"} rows={3}\n                            value={title} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setTitle(ev.target.value)} />\n                        <Form.Text className=\"text-muted\">Please enter the course&#39;s title here.</Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"addCourseForm.promptTextArea\">\n                        <Form.Label>Course Credits</Form.Label>\n                        <Form.Control as=\"textarea\" placeholder={\"3\"} rows={1}\n                            value={credits} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCredits(ev.target.value)} />\n                        <Form.Text className=\"text-muted\">Please enter the course&#39;s credits here.</Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"addCourseForm.promptTextArea\">\n                        <Form.Label>Course Description</Form.Label>\n                        <Form.Control as=\"textarea\" placeholder={\"Object oriented software design and development through use of an object oriented programming language.\"} rows={5}\n                            value={description} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDescription(ev.target.value)} />\n                        <Form.Text className=\"text-muted\">Please enter the course&#39;s description here.</Form.Text>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={() => setShowAddModal(false)}>Cancel</Button>\n                <Button variant=\"info\" onClick={saveCourse}>Add</Button>\n            </Modal.Footer>\n        </Modal>);\n}\n\nexport function RemoveCourseModal({ showRemoveModal, setShowRemoveModal, removeCourse }:\n    { showRemoveModal: boolean, setShowRemoveModal: (b: boolean) => void, removeCourse: (s: string) => void }): JSX.Element {\n    const [removeCode, setRemoveCode] = useState<string>(\"\");\n    const hideRemoveModal = () => setShowRemoveModal(false);\n\n    function saveCode() {\n        removeCourse(removeCode);\n        hideRemoveModal();\n    }\n\n    return (\n        <Modal show={showRemoveModal} onHide={hideRemoveModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Remove Course</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"addCourseForm.promptTextArea\">\n                        <Form.Label>Enter Course Code</Form.Label>\n                        <Form.Control as=\"textarea\" placeholder={\"CISC 108\"} rows={1}\n                            value={removeCode} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setRemoveCode(ev.target.value)} />\n                        <Form.Text className=\"text-muted\">Please enter the course&#39;s code here.</Form.Text>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={() => setShowRemoveModal(false)}>Cancel</Button>\n                <Button variant=\"warning\" onClick={saveCode}>Remove</Button>\n            </Modal.Footer>\n        </Modal>);\n}\n\nexport function AddSemesterModal({ addSemester }: { addSemester: (s: string) => void }): JSX.Element {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [semester, setSemester] = useState<string>(\"\");\n\n    function saveSemester() {\n        addSemester(semester);\n\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-dark\" onClick={handleShow}>+</Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add a Semester</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Semester</Form.Label>\n                            <Form.Control as=\"select\"\n                                value={semester}\n                                onChange={\n                                    e => {\n                                        setSemester(e.target.value);\n                                    }}>\n                                <option value=\"\">Select A Semester</option>\n                                <option value=\"Freshman Winter Semester\">Freshman Winter Semester</option>\n                                <option value=\"Freshman Summer Semester\">Freshman Summer Semester</option>\n                                <option value=\"Sophmore Winter Semester\">Sophmore Winter Semester</option>\n                                <option value=\"Sophmore Summer Semester\">Sophmore Summer Semester</option>\n                                <option value=\"Junior Winter Semester\">Junior Winter Semester</option>\n                                <option value=\"Junior Summmer Semester\">Junior Summer Semester</option>\n                                <option value=\"Senior Winter Semester\">Senior Winter Semester</option>\n                                <option value=\"Senior Summer Semester\">Senior Summer Semester</option>\n                            </Form.Control>\n                            <Form.Text className=\"text-muted\">\n                                Please choose a semester you would like to add here...\n                            </Form.Text>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={saveSemester}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n/*\nexport function SaveScheduleModal({ saveSchedule }: { saveSchedule: (s: string) => void }): JSX.Element {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [schedule, setSchedule] = useState<string>(\"\");\n\n    function hardSaveSchedule() {\n        saveSchedule(schedule);\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-dark\" onClick={handleShow}>Save/Load</Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Save/Load Schedule</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Semester</Form.Label>\n                            <Form.Control as=\"select\"\n                                value={schedule}\n                                onChange={\n                                    e => {\n                                        setSchedule(e.target.value);\n                                    }}>\n                                <option value=\"\">Select A Scedule</option>\n                                <option value=\"Schedule #1\">Schedule #1</option>\n                                <option value=\"Schedule #2\">Schedule #2</option>\n                            </Form.Control>\n                            <Form.Text className=\"text-muted\">\n                                Please choose a schedule you would like to modify/save/load here...\n                            </Form.Text>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={hardSaveSchedule}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n*/\nexport function RemoveSemesterModal({ removeSemester }: { removeSemester: () => void }): JSX.Element {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button variant=\"outline-dark\" onClick={handleShow}>-</Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Please Read Carefully</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>What you are about to do is delete the semester that you are currently on. If you want to cancel your action, \n                    either click on the <b>X</b> in the corner or click <b>Cancel</b>. However, if you would like to continue, please\n                    click <b>Delete</b> Semester \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"danger\" onClick={removeSemester}>\n                        Delete Semester\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Course } from \"../Interfaces/Course\";\nimport { Semester } from \"../Interfaces/Semester\";\nimport { CodeForm, TitleForm, CreditsForm, DescriptionForm } from \"./Modals&Forms\";\n\nexport const LOCAL_STORAGE = \"schedule\";\n\nexport function ControlPanelButtons({setShowAddModal, setShowRemoveModal, setEditing, clearSemester, hardReset, hardSave, hardLoad}: \n    {setShowAddModal: (b:boolean)=>void, setShowRemoveModal: (b:boolean)=>void, setEditing: (b:boolean)=>void, clearSemester: VoidFunction, \n        removeSemester: VoidFunction, hardReset: VoidFunction, hardSave: VoidFunction, hardLoad: VoidFunction}): JSX.Element {\n\n    return <div>\n        <Button\n            variant=\"secondary\"\n            className=\"me-3\"\n            onClick={()=>{\n                setShowAddModal(true);\n            }}\n        >Add Course</Button>\n        <Button\n            variant=\"secondary\"\n            className=\"me-3\"\n            onClick={()=>{\n                setShowRemoveModal(true);\n            }}\n        >Remove Course</Button>\n        <Button \n            variant=\"secondary\" \n            className=\"me-3\"\n            onClick={()=>{\n                setEditing(true);\n            }}\n        >Edit Course</Button>\n        <Button \n            variant=\"secondary\" \n            className=\"me-3\"\n            onClick={()=>{\n                clearSemester();\n            }}\n        >Clear Courses</Button>\n        <Button\n            variant=\"secondary\" \n            className=\"me-3\" \n            onClick={() => {\n                hardReset();\n            }}\n        >Reset</Button>\n        <Button\n            variant=\"secondary\" \n            className=\"me-3\" \n            onClick={() => {\n                hardSave();\n            }}\n        >Save</Button>\n        <Button\n            variant=\"secondary\" \n            className=\"me-3\" \n            onClick={() => {\n                hardLoad();\n            }}\n        >Load</Button>\n    </div>;\n}\n\n\nexport function CloseEditing({course, setEditing, currentSemester, setCurrentSemester}: \n    {course: Course, setEditing: (b:boolean)=>void, currentSemester: Semester, setCurrentSemester: (s:Semester)=>void}): JSX.Element {\n    const [newCode, setCode] = useState<string>(course.code);\n    const [newTitle, setTitle] = useState<string>(course.title);\n    const [newCredits, setCredits] = useState<string>(course.credits);\n    const [newDescription, setDescription] = useState<string>(course.description);\n    \n    // the following function includes guidance from Cameron Thakar (Team 4)\n    function updateSemester(): void {\n        setCurrentSemester({title: currentSemester.title, courses: currentSemester.courses.map((oldCourse: Course): Course => {\n            return course.code === oldCourse.code ? \n                {...oldCourse, code: newCode, title: newTitle, credits: newCredits, description: newDescription} \n                : oldCourse;\n        })});\n    }\n\n    function resetSemester(): void {\n        setCode(course.code);\n        setTitle(course.title);\n        setCredits(course.credits);\n        setDescription(course.description);\n    }\n\n    return (\n        <div><table className  = \"Table-Header\">\n            <tr><th>Course</th><th>Title</th><th>Credits</th><th>Description</th><th>Panel</th></tr> \n            <tr><td><CodeForm course={ course } newCode={ newCode } setCode={ setCode }></CodeForm></td>\n                <td><TitleForm course={ course } newTitle={ newTitle } setTitle={ setTitle }></TitleForm></td>\n                <td><CreditsForm course={ course } newCredits={ newCredits } setCredits={ setCredits }></CreditsForm></td>\n                <td><DescriptionForm course={ course } newDescription={ newDescription } setDescription={ setDescription }></DescriptionForm></td>\n                <td>\n                    <Button \n                        variant=\"outline-danger\" \n                        onClick={()=>{\n                            resetSemester();\n                            setEditing(false);\n                        }} \n                    >Cancel</Button>\n                    <Button \n                        variant=\"success\"\n                        onClick={()=>{\n                            updateSemester();\n                            setEditing(false);\n                        }}\n                    >Done</Button>\n                </td></tr></table></div>);\n}\n\n\n","import \"../../css/Semester.css\";\nimport React from \"react\";\nimport { CloseEditing } from \"../ControlPanel\";\nimport { Semester } from \"../../Interfaces/Semester\";\nimport { Course } from \"../../Interfaces/Course\";\n\nexport function SemesterTable({editing, setEditing, currentSemester, setCurrentSemester}: \n    {editing: boolean, setEditing: (b:boolean)=>void,currentSemester: Semester, setCurrentSemester: (s:Semester)=>void}): JSX.Element {\n    \n    return !editing ? \n        <table className  = \"Table-Header\">\n            <tr><th>Course</th><th>Title</th><th>Credits</th><th>Description</th></tr> \n            { currentSemester.courses.map((course: Course) => {\n                return <tr key={course.code}>\n                    <td>{course.code}</td>\n                    <td>{course.title}</td>\n                    <td>{course.credits}</td>\n                    <td>{course.description}</td>\n                </tr>;\n            })}\n        </table>\n        :\n        <div>\n            { currentSemester.courses.map((course: Course) => {\n                return <CloseEditing \n                    key={ course.code }\n                    course={ course } \n                    setEditing={ setEditing } \n                    currentSemester={ currentSemester }\n                    setCurrentSemester={ setCurrentSemester }\n                ></CloseEditing>;\n            })}\n        </div>;\n}\n","import React, { useCallback } from \"react\";\nimport \"../css/PopUp.css\";\n\n\ntype Props = {\n    handleClose: () => void;\n    content: string ;\n}\n\nconst PopUp: React.FC<Props> = ({handleClose, content}) => {\n\n    const onClick = useCallback(()=>{\n        handleClose();\n    },\n    [handleClose]);\n\n    return (\n        <div className = \"PopUpBox\">\n            <div className = \"box\">\n                <span className = \"close\" onClick={onClick}>\n                 x\n                </span>\n                {content}\n            </div>\n        </div>\n    );\n};\n\nexport default PopUp;\n    \n\n","import { Semester } from \"../../Interfaces/Semester\";\nimport COURSES from \"../../Assets/Courses.json\";\n\nexport const defaultSemesters: Semester[] = [{\n    courses: [COURSES[0], COURSES[1], COURSES[2], COURSES[3], COURSES[4]],\n    title: \"Freshman Fall Semester\"\n},\n{\n    courses: [COURSES[5], COURSES[6], COURSES[7], COURSES[8], COURSES[9]],\n    title: \"Freshman Spring Semester\"\n},\n{\n    courses: [COURSES[10], COURSES[11], COURSES[12], COURSES[13], COURSES[14]],\n    title: \"Sophmore Fall Semester\"\n},\n{\n    courses: [COURSES[15], COURSES[16], COURSES[17], COURSES[18], COURSES[19]],\n    title: \"Sophmore Spring Semester\"\n},\n{\n    courses: [COURSES[20], COURSES[21], COURSES[22], COURSES[23], COURSES[24]],\n    title: \"Junior Fall Semester\"\n},\n{\n    courses: [COURSES[25], COURSES[26], COURSES[27], COURSES[28], COURSES[29]],\n    title: \"Junior Spring Semester\"\n},\n{\n    courses: [COURSES[30], COURSES[31], COURSES[32], COURSES[33], COURSES[34]],\n    title: \"Senior Fall Semester\"\n},\n{\n    courses: [COURSES[35], COURSES[36], COURSES[37], COURSES[38], COURSES[39]],\n    title: \"Senior Spring Semester\"\n},\n];","import \"./css/App.css\";\nimport React, { useState } from \"react\";\nimport Tab from \"./Components/Tabs/Tab\";\nimport { SemesterTable } from \"./Components/Semesters/SemesterTable\";\nimport PopUp from \"./Components/PopUpInstructions\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { ControlPanelButtons, LOCAL_STORAGE } from \"./Components/ControlPanel\";\nimport { AddCourseModal, AddSemesterModal, RemoveCourseModal, RemoveSemesterModal } from \"./Components/Modals&Forms\";\nimport { Course } from \"./Interfaces/Course\";\nimport { Semester } from \"./Interfaces/Semester\";\nimport { defaultSemesters } from \"./Components/Semesters/DefaultSemesters\";\n\nfunction App(): JSX.Element { // jsx.element = very important return type, function has to return jsx.element\n    const [semesterList, setSemesterList] = useState(defaultSemesters);\n    const [currentSemester, setCurrentSemester] = useState<Semester>(semesterList[0]);\n    const [editing, setEditing] = useState<boolean>(false);\n    const [showAddModal, setShowAddModal] = useState<boolean>(false);\n    const [showRemoveModal, setShowRemoveModal] = useState<boolean>(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const togglePopUp = () => {\n        setIsOpen(!isOpen);\n    };\n\n    function hardSave() {\n        localStorage.setItem(LOCAL_STORAGE, JSON.stringify(semesterList));\n    }\n    \n\n    function hardLoad() {\n        const scheduleJSON = localStorage.getItem(LOCAL_STORAGE);\n        if (scheduleJSON !== null) {\n            const parsed = JSON.parse(scheduleJSON);\n            setSemesterList(parsed);\n        }  else {\n            const parsed = JSON.parse(\"[]\");\n            setSemesterList(parsed);\n        }\n    }\n\n    function hardReset() {\n        setSemesterList(defaultSemesters);\n    }\n\n    function removeSemester() {\n        const newSemesterList = semesterList.filter(sem => sem !== currentSemester);\n        setSemesterList(newSemesterList);\n        setCurrentSemester(newSemesterList[0]);\n    }\n\n    function addSemester(newSemester: string) {\n        setSemesterList([...semesterList, {title: newSemester, courses: []}]);\n    }\n\n\n    function clearSemester() {\n        setCurrentSemester({title: currentSemester.title, courses: currentSemester.courses.filter(COURSES => !COURSES.code)});\n    }\n\n    function addCourse(newCourse: Course): void {\n        setCurrentSemester({title: currentSemester.title, courses: [...currentSemester.courses, newCourse]});\n    }\n\n    function removeCourse(removeCode: string): void {\n        setCurrentSemester({title: currentSemester.title, courses: currentSemester.courses.filter(course => course.code != removeCode)});\n    }\n    \n    return (\n        <div>\n            <input type=\"button\"\n                value=\"Instructions\"\n                onClick={togglePopUp} />\n            <p>Navigating Our Site</p>\n            {isOpen && <PopUp content={\"Course Selector -> Choose Semester -> Make Necessary Semester Changes -> Add/Remove If Necessary\"} handleClose={() => setIsOpen(false)} />}         \n            <Tab>\n                <span title=\"Welcome\">\n                    <body>\n                        <header>\n                            <h1>Team 3s UD Cis Scheduler</h1>\n                            <p>Authors: Ren Ross, Abel Juarez, and Ahilyn Dipre</p>\n                            <p>Our goal is to help CISC students plan out their semesters,\n                                by providing templates of potential Fall/Spring semesters and even\n                                Winter and Summer.</p>\n                            <p>This site will serve as a way for students\n                                to keep track of the classes they have taken and which ones\n                                they need to take next.\n                            </p>\n                            <p>Students will get the option to remove a Semester if they are not pleased with their schedule</p>\n                            <p>Students will be able to edit in classes in case our default schedules dont match theirs</p>\n                            <p>Recommended 4 Year Path To Graduate on Time: <a href=\"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf\">Suggested Plan</a></p>\n                            <h2>Created by: Ren Ross, Abel Juarez and Ahilyn Dipre</h2>\n                        </header>\n                    </body>\n                </span>\n                <span title=\"Course Selector\">\n                    <p>The table below is a structured set of data made up of courses that\n                        most Computer Science B.S. majors have to take. This table allows\n                        you to quickly and easily look through all the semesters (Freshman\n                        to Senior). These semesters default to courses that are recommended\n                        by the <a href=\"https://www.cis.udel.edu/wp-content/uploads/2018/10/COE_MajorSlicks_CISC_2018.pdf\">4 Year Path </a>\n                        to graduate on time (by the University of Delaware). However, the\n                        tables can be manipulated in a way that can fit anyone’s academic needs.</p>\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Semesters\">\n                        {semesterList.map(semi => {\n                            return (\n                                <Dropdown.Item onClick={() => setCurrentSemester(semi)} key={semi.title}>{semi.title}</Dropdown.Item>\n                            );\n                        })}\n                    </DropdownButton>\n                    <AddSemesterModal addSemester={addSemester}/>\n                    <RemoveSemesterModal removeSemester={removeSemester}/>\n                    <SemesterTable editing={editing} setEditing={setEditing} currentSemester={currentSemester} setCurrentSemester={setCurrentSemester}></SemesterTable>\n                    <ControlPanelButtons setShowAddModal={ setShowAddModal } setShowRemoveModal={ setShowRemoveModal } setEditing={ setEditing } clearSemester={ clearSemester } removeSemester={ removeSemester } hardReset={ hardReset } hardSave={ hardSave } hardLoad={ hardLoad }></ControlPanelButtons>\n                    <AddCourseModal showAddModal={ showAddModal } setShowAddModal={ setShowAddModal } addCourse={ addCourse }></AddCourseModal>\n                    <RemoveCourseModal showRemoveModal={ showRemoveModal } setShowRemoveModal={ setShowRemoveModal } removeCourse={ removeCourse }></RemoveCourseModal>\n                </span>\n            </Tab>\n        </div>\n\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}